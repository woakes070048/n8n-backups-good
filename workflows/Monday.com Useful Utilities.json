{
  "active": false,
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "MONDAY UPLOAD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET ITEM": {
      "main": [
        [
          {
            "node": "GET BOARD RELATION",
            "type": "main",
            "index": 0
          },
          {
            "node": "PULL SUBITEMS",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "COLUMN BY NAME",
            "type": "main",
            "index": 0
          },
          {
            "node": "COLUMN BY ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PULL SUBITEMS": {
      "main": [
        [
          {
            "node": "SPLIT SUBITEMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SPLIT SUBITEMS": {
      "main": [
        [
          {
            "node": "GET EACH SUBITEM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GET LINKEDPULSES": {
      "main": [
        [
          {
            "node": "SPLIT LINKED PULSES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET BOARD RELATION": {
      "main": [
        [
          {
            "node": "GET LINKEDPULSES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SPLIT LINKED PULSES": {
      "main": [
        [
          {
            "node": "PULL LINKEDPULSE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "GET ITEM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-28T03:01:40.175Z",
  "id": "FwPnPamQ9WgtDRHp",
  "meta": {
    "templateId": "2073"
  },
  "name": "Monday.com Useful Utilities",
  "nodes": [
    {
      "parameters": {},
      "id": "de488298-e4f3-4b06-aef3-5d5d795382e9",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        380,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "//Search for \"Subitems\" column\nconst columnName = \"Subitems\"\nfunction getColumnValue(item, columnId) {\n    const column = item.column_values.find(column => column.column.title === columnId);\n    if (column) {\n          return column\n    } else {\n        return null;\n    }\n}\nconst columnValue = getColumnValue($input.last().json, columnName);\nreturn JSON.parse(columnValue.value);\n\n//ALT OPTION - direct access by column_values[0]\n//var ids = $input.last().json['column_values'][0]['value'];\n//return JSON.parse(ids)"
      },
      "id": "7e8c25dc-7ccd-44b5-a4b1-33def99fc811",
      "name": "PULL SUBITEMS",
      "type": "n8n-nodes-base.code",
      "position": [
        900,
        140
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fieldToSplitOut": "linkedPulseIds",
        "include": "selectedOtherFields",
        "fieldsToInclude": "linkedPulseIds[0].linkedPulseId",
        "options": {}
      },
      "id": "82464748-cf9a-4792-8790-f07c06c1525d",
      "name": "SPLIT SUBITEMS",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        1100,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "boardItem",
        "operation": "get",
        "itemId": "=\n{{ $json.linkedPulseIds.linkedPulseId }}"
      },
      "id": "96a780da-be73-41c8-bf53-b2a05061a340",
      "name": "GET EACH SUBITEM",
      "type": "n8n-nodes-base.mondayCom",
      "position": [
        1280,
        140
      ],
      "notesInFlow": true,
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.monday.com/v2/file",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "mondayComOAuth2Api",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=mutation add_file($file: File!) {add_file_to_column (item_id:{{ $input.last().json[\"id\"] }} , column_id:\"file\" file: $file) {id}}"
            },
            {
              "name": "map",
              "value": "{\"image\":\"variables.file\"}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "5993e15a-1a1b-436e-b994-bf3acee16da0",
      "name": "MONDAY UPLOAD",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1280,
        280
      ],
      "notesInFlow": true,
      "typeVersion": 4.1,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "id": "06099adf-7f2f-4c32-84b8-e2458e39f95c",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        900,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "397c5d7b-76e4-4a0e-bd39-31c10571d68a",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1100,
        280
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "resource": "boardItem",
        "operation": "get",
        "itemId": "=\n{{ $json.linkedPulse.linkedPulseId }}"
      },
      "id": "a7bcc413-8d7e-4941-a81a-7a99fe14b01d",
      "name": "PULL LINKEDPULSE",
      "type": "n8n-nodes-base.mondayCom",
      "position": [
        1460,
        0
      ],
      "notesInFlow": true,
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "boardItem",
        "operation": "get",
        "itemId": "5775061188"
      },
      "id": "a4d2e3a7-05a9-434a-a4e5-d6ed3d538091",
      "name": "GET ITEM",
      "type": "n8n-nodes-base.mondayCom",
      "position": [
        600,
        240
      ],
      "notesInFlow": true,
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "data = $input.last().json.value\nconst linkedPulseID = JSON.parse(data).linkedPulseIds\nreturn { \"linkedPulse\": linkedPulseID}\n"
      },
      "id": "5ce40a46-1513-498a-9e92-8dd96e508f34",
      "name": "GET LINKEDPULSES",
      "type": "n8n-nodes-base.code",
      "position": [
        1100,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const columnName = \"Additional Contacts\"\n\nfunction getColumnValue(item, columnId) {\n    const column = item.column_values.find(column => column.column.title === columnId);\n    if (column) {\n          return column\n    } else {\n        return null;\n    }\n}\n\nconst columnValue = getColumnValue($input.last().json, columnName);\nreturn (columnValue)"
      },
      "id": "22e3ec96-4e83-42fa-aa25-ce0d7445df15",
      "name": "GET BOARD RELATION",
      "type": "n8n-nodes-base.code",
      "position": [
        900,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const columnName = \"Zoom Date\"\n\nfunction getColumnValue(item, columnId) {\n    const column = item.column_values.find(column => column.column.title === columnId);\n    if (column) {\n          return column\n    } else {\n        return null;\n    }\n}\n\nconst columnValue = getColumnValue($input.last().json, columnName);\nreturn (columnValue)"
      },
      "id": "e55be301-0a6a-43a6-8a07-becc39e0a254",
      "name": "COLUMN BY NAME",
      "type": "n8n-nodes-base.code",
      "position": [
        900,
        -280
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const columnId = \"person\"\n\nfunction getColumnValue(item, columnId) {\n    const column = item.column_values.find(column => column.id === columnId);\n    if (column) {\n          return column\n    } else {\n        return null;\n    }\n}\n\nconst columnValue = getColumnValue($input.last().json, columnId);\nreturn (columnValue)"
      },
      "id": "463966c2-27e2-429c-8f8b-b3c279592f0d",
      "name": "COLUMN BY ID",
      "type": "n8n-nodes-base.code",
      "position": [
        900,
        -140
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fieldToSplitOut": "linkedPulse",
        "include": "=",
        "options": {}
      },
      "id": "33b0aeff-18aa-4ee9-97b3-7c3a44cf96fc",
      "name": "SPLIT LINKED PULSES",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        1280,
        0
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-04-28T03:01:40.175Z",
  "versionId": "8536edcb-8378-4ff1-b2bd-1a0d55e4aa30"
}